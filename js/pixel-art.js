// 像素艺术管理模块
window.PixelArtManager = (function() {
    const pixelData = {"palette":["#fffefd","#fefffb","#fdfffe","#fffeff","#fffffa","#fefffd","#fffffb","#feffff","#fffffd","#ffffff"],"indices":[[9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,3,7,6,9,9,9,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,3,3,3,5,5,5,3,3,3,3,8,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,2,3,5,7,7,5,7,7,5,5,5,5,3,3,3,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,3,3,7,7,7,7,3,3,3,3,5,3,7,7,5,3,3,7,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,3,5,7,7,5,3,3,3,3,3,3,3,1,7,7,7,5,5,3,5,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[8,9,9,9,9,9,9,9,9,9,9,9,9,3,5,7,7,3,3,3,3,3,3,1,1,1,1,3,5,7,7,5,5,3,3,9,9,9,9,9,9,9,9,9,9,9,9,9],[8,8,8,9,9,8,9,9,9,9,9,9,1,5,7,7,7,3,1,1,1,1,1,1,1,1,1,1,5,5,5,3,5,3,3,7,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,8,9,9,9,9,9,9,9,9,6,3,7,7,7,7,3,3,1,1,1,1,1,1,1,1,1,5,7,7,5,5,5,5,3,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,8,8,8,9,8,9,9,8,9,3,3,7,7,7,7,5,5,1,1,1,1,1,0,1,1,3,5,7,7,5,5,3,5,3,7,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,3,3,5,5,5,5,5,3,1,0,0,1,0,0,0,1,5,7,7,7,5,5,3,3,3,3,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,7,3,3,3,3,3,3,7,3,3,1,1,0,1,0,1,1,5,7,7,5,5,5,3,3,3,3,7,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,5,3,3,3,3,3,7,5,5,7,5,3,3,3,2,1,5,5,7,7,3,5,5,3,3,3,3,7,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,5,1,1,3,3,7,7,7,7,7,7,7,7,7,7,7,5,5,7,3,3,7,3,3,3,3,3,7,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,5,1,3,3,3,3,5,3,5,7,7,7,7,7,7,7,7,7,5,3,5,5,5,3,3,3,3,5,8,9,8,9,9,8,8,9,9,9],[9,9,9,9,9,9,9,9,9,9,5,3,3,3,3,3,3,3,3,3,5,5,5,5,5,3,5,5,3,3,3,5,3,3,3,1,3,5,9,9,9,8,8,8,8,9,9,9],[9,8,9,8,9,9,9,9,9,9,7,3,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,5,5,3,3,3,3,3,3,3,3,7,9,9,9,9,9,9,8,9,9,9],[9,9,9,9,9,9,9,9,8,9,6,3,1,3,1,1,1,1,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,7,9,9,9,8,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,5,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,1,3,3,5,7,9,9,8,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,7,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,5,7,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,7,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,5,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,7,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,7,9,9,9,8,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,7,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,7,9,9,9,9,8,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,6,7,5,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,5,9,9,9,9,9,9,9,8,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,7,5,3,3,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,3,7,9,9,9,9,9,9,9,9,9,8,9,9],[9,9,9,9,9,9,9,9,9,8,9,9,9,9,7,5,3,1,1,1,3,2,1,2,2,2,3,2,3,3,3,3,3,3,3,6,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,5,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,5,6,6,9,9,9,9,9,9,9,9,9,9,8],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,3,5,3,3,3,3,3,1,2,2,1,2,1,3,3,3,3,3,3,6,6,6,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,3,3,3,3,3,3,3,3,2,1,1,1,2,3,2,2,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,2,3,3,3,3,1,1,1,1,1,1,1,1,2,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,8],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,2,2,2,2,1,1,1,1,1,1,2,2,6,6,6,6,6,6,6,6,8,9,8,9,9,8,8,9,8,8],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,2,2,2,1,2,2,2,2,2,4,6,6,6,6,6,6,6,6,6,9,8,9,9,9,9,9,9,8,8],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,4,2,2,2,4,4,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9]]};
    
    function generatePixelGrid() {
        const pixelGrid = document.getElementById('pixelGrid');
        if (!pixelGrid) return;
        
        let gridHTML = '';
        let pixelIndex = 0;
        pixelData.indices.forEach((row, rowIndex) => {
            row.forEach((colorIndex, colIndex) => {
                gridHTML += `<div class="pixel c${colorIndex}" data-row="${rowIndex}" data-col="${colIndex}" data-index="${pixelIndex}"></div>`;
                pixelIndex++;
            });
        });
        pixelGrid.innerHTML = gridHTML;
    }
    
    function initEventHandlers() {
        const pixelGrid = document.getElementById('pixelGrid');
        if (!pixelGrid) return;
        
        const pixels = document.querySelectorAll('.pixel');
        
        // 鼠标在网格内移动时更新高亮
        pixelGrid.addEventListener('mousemove', function(e) {
            const target = e.target;
            if(!target.classList.contains('pixel')) return;
            
            // 先清除之前的蓝色高亮
            pixels.forEach(p => {
                if(p.style.backgroundColor === 'rgb(0, 87, 165)') {
                    p.style.backgroundColor = '';
                }
            });
            
            const row = +target.dataset.row;
            const col = +target.dataset.col;
            const range = AppConfig.pixelArt.highlightRange;
            
            // 高亮周围像素
            for(let r = row - range; r <= row + range; r++) {
                for(let c = col - range; c <= col + range; c++) {
                    if(r >= 0 && r < AppConfig.pixelArt.gridSize && 
                       c >= 0 && c < AppConfig.pixelArt.gridSize) {
                        const p = document.querySelector(`[data-row="${r}"][data-col="${c}"]`);
                        if(p) {
                            p.style.backgroundColor = AppConfig.pixelArt.highlightColor;
                        }
                    }
                }
            }
        });
        
        // 鼠标离开整个网格才开始恢复
        pixelGrid.addEventListener('mouseleave', function() {
            pixels.forEach(p => {
                if(p.style.backgroundColor === 'rgb(0, 87, 165)') {
                    // 获取原始颜色
                    p.style.backgroundColor = '';
                    const originalColor = window.getComputedStyle(p).backgroundColor;
                    // 重新设置蓝色，然后过渡到原始颜色
                    p.style.backgroundColor = AppConfig.pixelArt.highlightColor;
                    p.style.transition = `background-color ${AppConfig.pixelArt.transitionDuration} ease`;
                    // 强制重绘后设置目标颜色
                    setTimeout(() => {
                        p.style.backgroundColor = originalColor;
                    }, 10);
                }
            });
        });
    }
    
    function init() {
        generatePixelGrid();
        initEventHandlers();
    }
    
    return {
        init
    };
})();